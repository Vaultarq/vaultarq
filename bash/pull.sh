#!/bin/bash

# vaultarq pull - Load secrets into current shell by generating env file

# Source common functions
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "${SCRIPT_DIR}/common.sh"

# Initialize common requirements
init_common

# Check if vault exists
if ! vault_exists; then
  echo "Error: No vault found. Run 'vaultarq init' first."
  exit 1
fi

# Get password
password=$(get_password)

# Decrypt the vault
echo "Decrypting vault..."
decrypted_vault=$(decrypt_vault "$password")

if [ $? -ne 0 ]; then
  echo "Error: Failed to decrypt vault. Incorrect password?"
  exit 1
fi

# Create env directory if it doesn't exist
mkdir -p "$ENV_DIR"

# Get secrets for the current environment
secrets=$(echo "$decrypted_vault" | jq -r --arg env "$CURRENT_ENV" '.[$env] | to_entries | map("\(.key)=\(.value)") | .[]')

# Generate the env.sh file with export statements
echo "# Generated by vaultarq pull - $(date)" > "$ENV_FILE"
echo "# Environment: $CURRENT_ENV" >> "$ENV_FILE"
echo "" >> "$ENV_FILE"

if [ -z "$secrets" ]; then
  echo "# No secrets found for $CURRENT_ENV environment" >> "$ENV_FILE"
else
  # Add each secret as an export statement
  while IFS= read -r key_value; do
    export_line=$(create_export "$key_value")
    echo "$export_line" >> "$ENV_FILE"
  done <<< "$secrets"
fi

chmod +x "$ENV_FILE"

echo "Secrets loaded successfully into $ENV_FILE"
echo "To use in current shell, run: source $ENV_FILE" 